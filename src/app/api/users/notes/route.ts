import { createClient } from "@/utils/supabase/server";
import { PostgrestError } from "@supabase/supabase-js";
import { NextRequest, NextResponse } from "next/server";

export async function GET(request: NextRequest) {
  try {
    const supabase = await createClient();
    const { data, error } = await supabase
      .schema("public")
      .from("users")
      .select("*, notes(*)");

    if (error) {
      throw error;
    }

    return NextResponse.json(data, { status: 200 });
  } catch (error) {
    return NextResponse.json(
      {
        error:
          error instanceof Error
            ? error.message
            : error instanceof PostgrestError
            ? error.message
            : "Internal Server Error",
      },
      { status: 500 }
    );
  }
}

/**
 * 
create table public.notes (
  id bigint generated by default as identity not null,
  user_id bigint not null,
  note text null,
  created_at timestamp with time zone not null default now(),
  constraint notes_pkey primary key (id),
  constraint notes_user_id_fkey foreign KEY (user_id) references users (id)
) TABLESPACE pg_default;
 */
